apiVersion: scaffolder.backstage.io/v1beta3
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-template
kind: Template
metadata:
  name: argocd-application-template
  title: Argo CD Application Template
  description: A template for creating Argo CD Applications
spec:
  owner: user:guest
  type: application
  parameters:
    - title: ArgoCD Application
      required:
        - name
        - description
        - githubUrl
        - documentationUrl
        - owner
        - system
      ui:order:
        - name
        - description
        - githubUrl
        - documentationUrl
        - owner
        - system
        - sourcesMessage
      properties:
        name:
          title: Name
          type: string
          description: Unique name for the Application
          pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
          ui:autofocus: true
          ui:options:
            rows: 5
          ui:help: 'Must be lowercase alphanumeric with optional hyphens (no leading/trailing hyphens)'
        description:
          title: Application description
          type: string
          description: A brief summary about the Application
          ui:widget: textarea
          ui:options:
            rows: 10
          ui:placeholder: |
            A pithy blurb
        githubUrl:
          title: External Github URL
          type: string
          description: Link to Github Repository
          pattern: '^https?:\/\/.+'
          ui:options:
            rows: 5
          ui:help: 'Must be a valid URL starting with http:// or https://'
        documentationUrl:
          title: External Documentation URL
          type: string
          description: Link to External Documentation
          pattern: '^https?:\/\/.+'
          ui:options:
            rows: 5
          ui:help: 'Must be a valid URL starting with http:// or https://'
        owner:
          title: Owner
          type: string
          description: Owner of the Application
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              kind:
               - Group
               - User
        system:
          title: System
          type: string
          description: System of the Application
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - System
        sourcesMessage:
          type: 'null' # Needs to be quoted
          description: |
            An ArgoCD application can be deployed from multiple sources
            - Helm repositories
            - Kustomize manifests
            - From both a helm repository and kustomize manifests
      errorMessage:
        properties:
          name: 'Must be lowercase alphanumeric characters with optional hyphens (no leading/trailing hyphens)'
          githubUrl: 'Must be a valid URL starting with http:// or https://'
          documentationUrl: 'Must be a valid URL starting with http:// or https://'

    - title: Helm Configuration
      required:
        - isHelm
      ui:order:
        - isHelm
        - helmRepoUrl
        - chartVersion
        - chartName
        - chartValuesUrl
      properties:
        isHelm:
          title: Is this deployed using a helm chart?
          type: boolean
          default: false
          ui:widget: radio
      dependencies:
        isHelm:
          allOf:
            - if:
                properties:
                  isHelm:
                    const: true
              then:
                properties:
                  helmRepoUrl:
                    title: Repo URL
                    type: string
                    pattern: '^(https?|oci):\/\/.+'
                    ui:help: 'Must be a valid URL starting with http://, https://, or oci://'
                  chartName:
                    title: Chart Name
                    type: string
                    pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
                    ui:help: 'Must be lowercase alphanumeric with optional hyphens'
                  chartVersion:
                    title: Version or Tag
                    type: string
                    pattern: '^[a-zA-Z0-9._-]+$'
                    ui:help: 'Must be a valid version (e.g., 1.0.0, v1.2.3, latest)'
                  chartValuesUrl:
                    title: Values Url (usually in the maintainers github)
                    type: string
                    pattern: '^https?:\/\/.+'
                    ui:help: 'Must be a valid URL starting with http:// or https://'
                required:
                  - helmRepoUrl
                  - chartName
                  - chartVersion
                  - chartValuesUrl
                errorMessage:
                  properties:
                    helmRepoUrl: 'Must be a valid URL starting with http://, https://, or oci://'
                    chartName: 'Must be lowercase alphanumeric characters with optional hyphens'
                    chartVersion: 'Must be a valid version string'
                    chartValuesUrl: 'Must be a valid URL starting with http:// or https://'

    - title: Kustomize Configuration
      required:
        - isKustomize
        - dockerImage
        - dockerTag
        - dockerPort
        - hostName
      ui:order:
        - isKustomize
        - dockerImage
        - dockerTag
        - dockerPort
        - hostName
      properties:
        isKustomize:
          title: Is this deployed using kustomize manifests?
          type: boolean
          default: false
          ui:widget: radio
      dependencies:
        isKustomize:
          allOf:
            - if:
                properties:
                  isKustomize:
                    const: true
              then:
                properties:
                  dockerImage:
                    title: Docker image
                    type: string
                    pattern: '^[a-z0-9]+((\.|_|__|-+)[a-z0-9]+)*(\/[a-z0-9]+((\.|_|__|-+)[a-z0-9]+)*)*$'
                    ui:help: 'Must be a valid Docker image name (e.g., nginx, myregistry.io/myimage)'
                  dockerTag:
                    title: Docker tag
                    type: string
                    pattern: '^[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127}$'
                    ui:help: 'Must be a valid Docker tag (e.g., latest, v1.0.0, prod-2024)'
                  dockerPort:
                    title: Exposed port
                    type: string
                    pattern: '^([1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$'
                    ui:help: 'Must be a valid port number (1-65535)'
                  hostName:
                    title: Hostname
                    type: string
                    pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
                    ui:help: 'Must be a valid hostname (e.g., example.com, app.example.com)'
                  # workloadType:
                  #   title: Select a Workload Type
                  #   type: string
                  #   default: Deployment
                  #   enum:
                  #     - Deployment
                  #     - Statefulset
                  #   ui:widget: radio
                  # otherResources:
                  #   title: Select resources
                  #   type: array
                  #   items:
                  #     type: string
                  #     enum:
                  #       - service
                  #       - httproute
                  #       - serviceaccount
                  #   uniqueItems: true
                  #   ui:widget: checkboxes
                errorMessage:
                  properties:
                    dockerImage: 'Must be a valid Docker image name (lowercase, alphanumeric with allowed separators)'
                    dockerTag: 'Must be a valid Docker tag (alphanumeric with dots, dashes, underscores)'
                    dockerPort: 'Must be a valid port number between 1 and 65535'
                    hostName: 'Must be a valid hostname (lowercase, alphanumeric with dots and hyphens)'

    - title: Deploy to Cluster 
      required:
        - deployNow
      ui:order:
        - deployNow
      properties:
        deployNow:
          title: Do you want this deployed now
          type: boolean
          default: true
          ui:widget: radio

  steps:

    - id: templateApplication
      name: Template Application
      action: fetch:template:file
      input:
        url: ./content/application.yaml
        targetPath: ./${{ parameters.name }}/application.yaml
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          githubUrl: ${{ parameters.githubUrl }}
          documentationUrl: ${{ parameters.documentationUrl }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          isKustomize: ${{ parameters.isKustomize }}
          isHelm: ${{ parameters.isHelm }}
          helmRepoUrl: ${{ parameters.helmRepoUrl }}
          chartVersion: ${{ parameters.chartVersion }}
          chartValuesUrl: ${{ parameters.chartValuesUrl }}

    - id: templateHelm
      name: Template Helm
      action: fetch:template
      if: ${{ parameters.isHelm }}
      input:
        url: ./content/helm
        targetPath: ./${{ parameters.name }}/helm
        values:
          name: ${{ parameters.name }}
          isHelm: ${{ parameters.isHelm }}
          helmRepoUrl: ${{ parameters.helmRepoUrl }}
          chartVersion: ${{ parameters.chartVersion }}
          chartValuesUrl: ${{ parameters.chartValuesUrl }}

    - id: templateKustomize
      name: Template Kustomize
      action: fetch:template
      if: ${{ parameters.isKustomize }}
      input:
        url: ./content/kustomize
        targetPath: ./${{ parameters.name }}/kustomize
        values:
          name: ${{ parameters.name }}
          isKustomize: ${{ parameters.isKustomize }}
          dockerImage: ${{ parameters.dockerImage }}
          dockerTag: ${{ parameters.dockerTag }}
          dockerPort: ${{ parameters.dockerPort }}
          hostName: ${{ parameters.hostName }}

    - id: templateDocs
      name: Template Documentation
      action: fetch:template
      input:
        url: ./content/docs
        targetPath: ./${{ parameters.name }}/docs
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          githubUrl: ${{ parameters.githubUrl }}
          documentationUrl: ${{ parameters.documentationUrl }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          isKustomize: ${{ parameters.isKustomize }}
          isHelm: ${{ parameters.isHelm }}
          helmRepoUrl: ${{ parameters.helmRepoUrl }}
          chartName: ${{ parameters.chartName }}
          chartVersion: ${{ parameters.chartVersion }}
          chartValuesUrl: ${{ parameters.chartValuesUrl }}
          dockerImage: ${{ parameters.dockerImage }}
          dockerTag: ${{ parameters.dockerTag }}
          dockerPort: ${{ parameters.dockerPort }}
          hostName: ${{ parameters.hostName }}

    - id: templateMkdocs
      name: Template MkDocs Config
      action: fetch:template:file
      input:
        url: ./content/mkdocs.yml
        targetPath: ./${{ parameters.name }}/mkdocs.yml
        values:
          name: ${{ parameters.name }}

    - id: templateGithubWorkflow
      name: Template GitHub Actions Workflow
      action: fetch:template:file
      input:
        url: ./content/.github/workflows/techdocs.yml
        targetPath: ./.github/workflows/${{ parameters.name }}.yml
        values:
          name: ${{ parameters.name }}

    # https://github.com/jDmacD/catalogue/blob/main/kustomization.yaml

    - id: fetchKustomize
      if: ${{ parameters.deployNow }}
      name: Fetch Kustomize to deploy
      action: fetch:plain:file
      input:
        url: https://github.com/jDmacD/catalogue/blob/main/kustomization.yaml
        targetPath: ./kustomization.yaml

    - id: mergeKustomize
      if: ${{ parameters.deployNow }}
      name: Add to Resource List
      action: roadiehq:utils:merge
      input:
        path: ./kustomization.yaml
        mergeArrays: true
        preserveYamlComments: true
        content:
          resources:
            - ${{ parameters.name }}/application.yaml

    - id: createPullRequest
      name: Create Merge Request
      action: publish:github:pull-request
      input:
        repoUrl: github.com?repo=catalogue&owner=jDmacD
        branchName: argocd-application-${{ parameters.name }}
        update: true
        targetBranchName: main
        title: Create ArgoCD ${{ parameters.name }} Application
        description: |
          This will deploy an Application with the following properties:
          - ${{ parameters.helmRepoUrl }}

    # - id: publish
    #   name: Publish
    #   action: publish:github
    #   input:
    #     description: This is ${{ parameters.name }}
    #     repoUrl: ${{ parameters.repoUrl }}
    #     defaultBranch: 'main'

    # - id: register
    #   name: Register
    #   action: catalog:register
    #   input:
    #     repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
    #     catalogInfoPath: '/catalog-info.yaml'

  # some outputs which are saved along with the job for use in the frontend
  # output:
  #   links:
  #     - title: Repository
  #       url: ${{ steps['publish'].output.remoteUrl }}
  #     - title: Open in catalog
  #       icon: catalog
  #       entityRef: ${{ steps['register'].output.entityRef }}
